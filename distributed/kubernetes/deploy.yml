apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: inference
  labels: 
    app: chunkflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chunkflow
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: chunkflow
    spec:
      hostNetwork: true
      dnsPolicy: "Default"
      containers:
      - name: chunkflow
        image: seunglab/chunkflow:latest
        imagePullPolicy: Always
        command: ["/bin/bash", "-c"]
        args: 
        - source /root/.bashrc; 
          mkdir /nets; cd /nets; wget -nc -nv "${CONVNET_PATH}${CONVNET_FILE_NAME}";
          export PYTHONPATH=$HOME/workspace/chunkflow:$PYTHONPATH;
          export PYTHONPATH=$HOME/workspace/cloud-volume:$PYTHONPATH;
          export PYTHONPATH=$HOME/workspace/chunkflow/docker/inference/pytorch-model:$PYTHONPATH;
          export PYTHONPATH=$HOME/workspace/chunkflow/docker/inference/pytorch-emvision:$PYTHONPATH;
          echo "started all processes...";  
          seq "$PROCESS_NUM" | parallel -j "$PROCESS_NUM" --delay 300 --ungroup echo Starting worker {}\; chunkflow --verbose --mip 2 generate-task --queue-name="$QUEUE_NAME" --visibility-timeout=$VISIBILITY_TIMEOUT mask --name='check-all-zero-and-skip-to-save' --check-all-zero --volume-path="$OUTPUT_MASK_LAYER_PATH" --mip 6 --skip-to='save' --fill-missing --inverse cutout --volume-path="$IMAGE_LAYER_PATH" --expand-margin-size 10 128 128 --fill-missing mask --name='mask-image' --volume-path="$IMAGE_MASK_LAYER_PATH" --mip 6 --fill-missing --inverse inference --convnet-model='rsunet' --convnet-weight-path="/nets/${CONVNET_FILE_NAME}" --patch-size 20 256 256 --patch-overlap 10 128 128 --output-key='affinity' --original-num-output-channels 3 --num-output-channels 3 --framework='pytorch-multitask' --batch-size="$BATCH_SIZE" --bump="$BUMP" crop-margin mask --name='mask-aff' --volume-path="$OUTPUT_MASK_LAYER_PATH" --mip 6 --fill-missing --inverse save --volume-path="$OUTPUT_LAYER_PATH" --upload-log --nproc 0 --create-thumbnail cloud-watch delete-task-in-queue;
        env:
        - name: PROCESS_NUM
          value: 2
        - name: BUMP
          value: "zung"
        - name: BATCH_SIZE
          value: "1"
        - name: CONVNET_PATH
          value: "path/of/convnet"
        - name: CONVNET_FILE_NAME
          value: "convnet.chkpt"
        - name: IMAGE_LAYER_PATH
          value: "image/layer/path"
        - name: IMAGE_MASK_LAYER_PATH
          value: "image/mask/layer/path"
        - name: OUTPUT_LAYER_PATH
          value: "output/layer/path"
        - name: OUTPUT_MASK_LAYER_PATH
          value: "output/mask/layer/path"
        - name: VISIBILITY_TIMEOUT
          value: "1800"
        - name: QUEUE_NAME
          value: "aws-sqs-queue-name"
        - name: LC_ALL 
          value: C.UTF-8 
        - name: LANG 
          value: C.UTF-8 
        volumeMounts:
        - name: secrets 
          mountPath: /root/.cloudvolume/secrets 
          readOnly: true
        resources:
          requests:
            cpu: "3.2"
            memory: 23.6G
          limits:
            nvidia.com/gpu: 1
      volumes:
      - name: secrets 
        secret: 
          secretName: secrets
